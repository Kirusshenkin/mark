package agents

import (
	"context"
	"fmt"

	"github.com/kirillm/dca-bot/internal/ai"
	"github.com/kirillm/dca-bot/pkg/utils"
)

// ChatAgent –ª–æ–∫–∞–ª—å–Ω—ã–π –∞–≥–µ–Ω—Ç –¥–ª—è –æ–±—â–µ–Ω–∏—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
type ChatAgent struct {
	client *ai.AIClient
}

// NewChatAgent —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π chat agent
func NewChatAgent(localAIURL, localModel string) *ChatAgent {
	// –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π –º–æ–¥–µ–ª–∏ (Ollama)
	client := ai.NewAIClient("ollama", "", localAIURL, localModel)

	return &ChatAgent{
		client: client,
	}
}

// Process –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
func (ca *ChatAgent) Process(ctx context.Context, userMessage string, contextInfo string) (string, []ai.AIAction, error) {
	utils.LogInfo(fmt.Sprintf("[ChatAgent] Processing: %s", userMessage))

	// –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –º–µ—Ç–æ–¥ ProcessMessage –∏–∑ AIClient
	response, actions, err := ca.client.ProcessMessage(userMessage, contextInfo)
	if err != nil {
		return "", nil, fmt.Errorf("chat agent failed: %w", err)
	}

	utils.LogInfo(fmt.Sprintf("[ChatAgent] Response: %s, Actions: %d", truncateResponse(response), len(actions)))

	return response, actions, nil
}

// GetSystemPrompt –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è —á–∞—Ç –∞–≥–µ–Ω—Ç–∞
func (ca *ChatAgent) GetSystemPrompt() string {
	return `–í—ã ‚Äî –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫—Ä–∏–ø—Ç–æ—Ç—Ä–µ–π–¥–∏–Ω–≥-–±–æ—Ç–æ–º.

–í–∞—à–∞ –∑–∞–¥–∞—á–∞:
- –û—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ —Å—Ç–∞—Ç—É—Å–µ –±–æ—Ç–∞, –ø–æ–∑–∏—Ü–∏—è—Ö, —Ü–µ–Ω–∞—Ö
- –í—ã–ø–æ–ª–Ω—è—Ç—å –ø—Ä–æ—Å—Ç—ã–µ –∫–æ–º–∞–Ω–¥—ã —á–µ—Ä–µ–∑ function calling
- –î–∞–≤–∞—Ç—å –∫—Ä–∞—Ç–∫–∏–µ –∏ –ø–æ–Ω—è—Ç–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
- –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å emoji –¥–ª—è –Ω–∞–≥–ª—è–¥–Ω–æ—Å—Ç–∏ üòä üìä üí∞

–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ (ToolCalls):
- get_status: –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å –ø–æ–∑–∏—Ü–∏–π
- get_price: —É–∑–Ω–∞—Ç—å —Ç–µ–∫—É—â—É—é —Ü–µ–Ω—É –∞–∫—Ç–∏–≤–∞
- get_history: –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏—Å—Ç–æ—Ä–∏—é —Å–¥–µ–ª–æ–∫
- get_portfolio: –æ–±–∑–æ—Ä –ø–æ—Ä—Ç—Ñ–µ–ª—è
- init_grid: –∑–∞–ø—É—Å—Ç–∏—Ç—å Grid —Å—Ç—Ä–∞—Ç–µ–≥–∏—é
- enable_autosell / disable_autosell: —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–≤—Ç–æ-–ø—Ä–æ–¥–∞–∂–µ–π
- manual_buy / manual_sell: —Ä—É—á–Ω–∞—è —Ç–æ—Ä–≥–æ–≤–ª—è

–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç –æ —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏—Ö —Ä–µ—à–µ–Ω–∏—è—Ö ("—á—Ç–æ –¥–µ–ª–∞—Ç—å", "–∫–∞–∫–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è"),
—Å–∫–∞–∂–∏—Ç–µ, —á—Ç–æ —ç—Ç–æ –∑–∞–¥–∞—á–∞ –¥–ª—è DecisionAgent –∏ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /ai_decision.

–ë—É–¥—å—Ç–µ –∫—Ä–∞—Ç–∫–∏–º–∏! –ú–∞–∫—Å–∏–º—É–º 2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –Ω–∞ –æ—Ç–≤–µ—Ç.`
}

func truncateResponse(s string) string {
	if len(s) <= 100 {
		return s
	}
	return s[:100] + "..."
}
